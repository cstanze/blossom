// One of the first major bugs was an issue with the stack
// When running a loop, some variables weren't unloaded
// This was fixed by using `;` as a way of unloading from the stack
// Otherwise, it gets stuck on the stack until removed in a later operation

func breaking() {
  let i = 0;

  for i in range(2) {
    i += 1; // should unload correctly
    // the following however doesn't unload correctly
    // the elimination of the semicolon is allowed only
    // because of a bug in the parser code.
    // i += 1
  }

  return i;
}

// specifically, when the next operation is
// fncl (function call), it'll get `i` from the stack
// and it'll try to run the value of `i` as a function
// but of course, the value is an int which is not runnable
println(breaking());
